diff --git a/node_modules/react-native-bubble-tabbar/lib/BubbleTab.js b/node_modules/react-native-bubble-tabbar/lib/BubbleTab.js
index df08a3c..a0ec7df 100644
--- a/node_modules/react-native-bubble-tabbar/lib/BubbleTab.js
+++ b/node_modules/react-native-bubble-tabbar/lib/BubbleTab.js
@@ -5,7 +5,7 @@ const react_1 = tslib_1.__importStar(require("react"));
 const react_native_1 = require("react-native");
 const react_native_animation_hooks_1 = require("react-native-animation-hooks");
 const native_1 = tslib_1.__importStar(require("styled-components/native"));
-const BubbleTab = ({ iconRenderer, activeTabSize, disabledTabSize, tabName, icon, activeColor, inactiveColor = '#e0e0e0', activeBackgroundColor, isActive, onPress, onLongPress, accessibilityRole, accessibilityLabel, accessibilityState, testID, }) => {
+const BubbleTab = ({ iconRenderer, activeTabSize, disabledTabSize, tabName, icon, activeColor, inactiveColor = '#ccc', activeBackgroundColor, isActive, onPress, onLongPress, accessibilityRole, accessibilityLabel, accessibilityState, testID, }) => {
     const [isOpenAnimation, setIsOpenAnimation] = react_1.useState(isActive);
     const tabWidth = react_native_animation_hooks_1.useAnimation({
         type: 'timing',
@@ -24,10 +24,12 @@ const BubbleTab = ({ iconRenderer, activeTabSize, disabledTabSize, tabName, icon
     });
     react_1.useEffect(() => setIsOpenAnimation(isActive), [isActive]);
     const color = isActive ? activeColor : inactiveColor;
+    const colorBorder = isActive ? activeColor : 'transparent';
     const backgroundColor = isActive ? activeBackgroundColor : 'transparent';
+
     const renderedIcon = iconRenderer({ icon, color });
     return (react_1.default.createElement(TouchableBubbleTabContainer, { onPress: onPress, onLongPress: onLongPress, accessibilityRole: accessibilityRole, accessibilityState: accessibilityState, accessibilityLabel: accessibilityLabel, testID: testID },
-        react_1.default.createElement(AnimatedBubbleTabWrapper, { backgroundColor: backgroundColor, style: { width: tabWidth } },
+        react_1.default.createElement(AnimatedBubbleTabWrapper, { backgroundColor: backgroundColor, color: colorBorder, style: { width: tabWidth } },
             renderedIcon,
             isActive && (react_1.default.createElement(BubbleTabLabel, { numberOfLines: 1, color: color, style: { opacity: labelOpacity } }, tabName)))));
 };
@@ -41,20 +43,27 @@ const AnimatedBubbleTabWrapper = native_1.default(react_native_1.Animated.View)
   flex-direction: row;
   justify-content: center;
   align-items: center;
-  padding: 10px 18px;
-  border-radius: 20px;
+  padding: 12px 18px;
+  border-radius: 12px;
 
   ${({ backgroundColor }) => backgroundColor && 
     native_1.css `
       background-color: ${backgroundColor};
     `};
+
+    ${({ color }) => color &&
+    native_1.css `
+      border: 1px solid ${color};
+    `};
+
+   
 `;
 const BubbleTabLabel = native_1.default(react_native_1.Animated.Text) `
   margin-left: 10px;
   font-size: 14.5px;
   width: auto;
   height: auto;
-  font-weight: bold;
+  font-family: sen_bold;
 
   ${({ color }) => color &&
     native_1.css `
diff --git a/node_modules/react-native-bubble-tabbar/lib/BubbleTabBar.js b/node_modules/react-native-bubble-tabbar/lib/BubbleTabBar.js
index ddd11d8..f979a0e 100644
--- a/node_modules/react-native-bubble-tabbar/lib/BubbleTabBar.js
+++ b/node_modules/react-native-bubble-tabbar/lib/BubbleTabBar.js
@@ -12,6 +12,7 @@ const BubbleTabBar = ({ iconRenderer = constants_1.defaultIconRenderer, activeTa
     }, [state.routes]);
     return (react_1.default.createElement(BubbleTabBarContainer, { style: style, backgroundColor: backgroundColor }, tabRoutes.map(({ key: routeKey, name: routeName }, index) => {
         const currentTabConfig = tabs[index];
+        currentTabConfig.inactiveColor = '#fff';
         const { name, activeColor, activeBackgroundColor, inactiveColor, activeIcon, disabledIcon, } = currentTabConfig;
         const { options } = descriptors[routeKey];
         const { tabBarLabel: optionTabBarLabel, title: optionTitle, tabBarAccessibilityLabel: accessibilityLabel, } = options;
@@ -46,12 +47,15 @@ const BubbleTabBar = ({ iconRenderer = constants_1.defaultIconRenderer, activeTa
 exports.default = BubbleTabBar;
 const BubbleTabBarContainer = native_1.default.View `
   flex-direction: row;
-  border-top-color: #c4c4c4;
-  border-top-width: 0.5px;
-  height: 70px;
+  borderTopRightRadius: 50px;
+  borderTopLeftRadius: 50px;
+  height: 100%;
+  width: 100%;
   align-items: center;
-  justify-content: center;
+  justify-content: space-around;
   padding: 0 50px;
+  display: flex;
+
 
   ${({ backgroundColor }) => backgroundColor &&
     native_1.css `
diff --git a/node_modules/react-native-bubble-tabbar/lib/constants.js b/node_modules/react-native-bubble-tabbar/lib/constants.js
index edc0241..c283d58 100644
--- a/node_modules/react-native-bubble-tabbar/lib/constants.js
+++ b/node_modules/react-native-bubble-tabbar/lib/constants.js
@@ -16,10 +16,10 @@ exports.defaultIconRenderer = defaultIconRenderer;
 const Icon = native_1.default.Image.attrs({
     resizeMode: 'contain',
 }) `
-  height: 18px;
-  width: 18px;
+  height: 30px;
+  width: 30px;
 `;
-exports.defaultActiveTabSize = (dimensions_1.screenWidth - 50) / 3.8;
+exports.defaultActiveTabSize = dimensions_1.screenWidth/2.8;
 exports.defaultDisabledTabSize = 85;
 exports.defaultBackgroundColor = 'white';
 //# sourceMappingURL=constants.js.map
\ No newline at end of file
